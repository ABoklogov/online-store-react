{"version":3,"file":"static/js/951.b0468e6f.chunk.js","mappings":"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","sources":["webpack://online-store-react/./src/views/CardProductView/CardProductView.module.css?1cbc","webpack://online-store-react/./src/components/ProductDetails/ProductDetails.module.css?e553","webpack://online-store-react/./src/components/Slider/Slider.module.css?73e9","components/Slider/Slider.jsx","components/Description/Description.jsx","webpack://online-store-react/./src/components/Colors/Colors.module.css?918e","components/Colors/Colors.jsx","components/Price/Price.jsx","webpack://online-store-react/./src/components/Sizes/Sizes.module.css?6f2b","components/Sizes/Sizes.jsx","components/ProductDetails/ProductDetails.jsx","views/CardProductView/CardProductView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonBox\":\"CardProductView_buttonBox__2WOHB\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProductDetails_container__hWk4o\",\"cardProductContent\":\"ProductDetails_cardProductContent__PIxjY\",\"basketBtn\":\"ProductDetails_basketBtn__fre6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Slider_container__b5JB8\",\"currentImage\":\"Slider_currentImage__frS-1\",\"imgScroll\":\"Slider_imgScroll__OGnJR\",\"listImages\":\"Slider_listImages__XJWIN\",\"image\":\"Slider_image__2mWCV\"};","import noImage from 'img/noImage.jpeg';\r\nimport s from 'components/Slider/Slider.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Slider({ images, currentImage, setCurrentImage }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <img\r\n        src={currentImage ? currentImage : noImage}\r\n        alt=\"images-product\"\r\n        className={s.currentImage}\r\n      />\r\n\r\n      <ul className={s.listImages}>\r\n        {\r\n          images?.map(image => (\r\n            <li\r\n              key={image}\r\n              className={s.image}\r\n              onClick={() => setCurrentImage(image)}\r\n            >\r\n              <img src={image} alt=\"images-scroll\" className={s.imgScroll} />\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlider.protoType = {\r\n  images: PropTypes.arrayOf(PropTypes.string),\r\n  currentImage: PropTypes.string,\r\n  setCurrentImage: PropTypes.func,\r\n};\r\n\r\nexport default Slider;","// import s from 'components/Description/Description.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Description({ description }) {\r\n  return (\r\n    <p>\r\n      {description}\r\n    </p>\r\n  );\r\n};\r\n\r\nDescription.protoType = {\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport default Description;","// extracted by mini-css-extract-plugin\nexport default {\"colorsList\":\"Colors_colorsList__TFsFD\",\"color\":\"Colors_color__srAZ7\"};","import s from 'components/Colors/Colors.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Colors({ colors, changeColor, currentColor }) {\r\n  return (\r\n    <ul className={s.colorsList}>\r\n      {\r\n        colors?.map(color => (\r\n          <li\r\n            key={color.id}\r\n            className={s.color}\r\n            style={color.id === currentColor ? { color: '#0f7fcc' } : { color: '#000c0c' }}\r\n            onClick={() => changeColor(color)}\r\n          >\r\n            {color.name}\r\n          </li>\r\n        ))\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nColors.protoType = {\r\n  colors: PropTypes.arrayOf(PropTypes.object),\r\n  changeColor: PropTypes.func,\r\n  currentColor: PropTypes.number,\r\n};\r\n\r\nexport default Colors;","// import s from 'components/Price/Price.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Price({ price }) {\r\n  return (\r\n    <div>{`Цена - ${price} ₽`}</div>\r\n  );\r\n};\r\n\r\nPrice.protoType = {\r\n  price: PropTypes.string,\r\n};\r\n\r\nexport default Price;","// extracted by mini-css-extract-plugin\nexport default {\"Sizes\":\"Sizes_Sizes__5yzBG\",\"sizeItem\":\"Sizes_sizeItem__jEAbV\",\"sizeNotActive\":\"Sizes_sizeNotActive__YNpTr\",\"sizeText\":\"Sizes_sizeText__riSGh\"};","import { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from 'components/Sizes/Sizes.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchSizes, chooseSize } from 'store/catalog/catalogOperations';\r\nimport { setSelectedSize } from 'store/catalog/catalogSlice';\r\nimport Spinner from 'components/Spinner';\r\n\r\nfunction Sizes({ productSize, removeSearchParam, addSearchParam }) {\r\n  const dispatch = useDispatch();\r\n  const [searchParams] = useSearchParams();\r\n  const { catalog } = useSelector(state => state);\r\n  const [activeSizeId, setActiveSizeId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSizes());\r\n    return () => removeSize();\r\n  }, []);\r\n\r\n  // проверяем url строку\r\n  useEffect(() => {\r\n    const sizeQuery = searchParams.get('size') || '';\r\n\r\n    if (sizeQuery) {\r\n      const findSize = productSize.find(el => el === +sizeQuery);\r\n      findSize ? addSize(findSize) : removeSize();\r\n    };\r\n  }, [productSize, searchParams]);\r\n\r\n  const sizeAvailability = (id) => {\r\n    let style = null;\r\n\r\n    productSize?.forEach(el => {\r\n      if (el === id) {\r\n        style = {\r\n          borderColor: \"#0f7fcc\",\r\n          backgroundColor: \"#b5d3e7\",\r\n          cursor: \"pointer\",\r\n        };\r\n      };\r\n    });\r\n\r\n    if (id === activeSizeId) {\r\n      style = { ...style, borderColor: \"#084f80\", backgroundColor: \"#084f80\" }\r\n    };\r\n\r\n    return style;\r\n  };\r\n\r\n  const changeSize = (e, id) => {\r\n    const findSize = productSize?.find(el => el === id);\r\n    if (!findSize) {\r\n      return\r\n    } else {\r\n      const event = e.currentTarget;\r\n\r\n      if (event.data_selected !== 'active') {\r\n        event.style.backgroundColor = '#084f80';\r\n        event.style.borderColor = '#084f80';\r\n\r\n        if (activeSizeId === id) {\r\n          removeSize();\r\n          removeSearchParam('size');\r\n        } else {\r\n          addSize(id);\r\n          addSearchParam('size', id)\r\n        };\r\n      } else {\r\n        event.style.backgroundColor = '#b5d3e7';\r\n        event.style.borderColor = '#0f7fcc';\r\n\r\n        event.data_selected = '';\r\n        removeSize();\r\n        removeSearchParam('size');\r\n      };\r\n    };\r\n  };\r\n\r\n  const addSize = (id) => {\r\n    dispatch(chooseSize(id));\r\n    setActiveSizeId(id);\r\n  };\r\n\r\n  const removeSize = () => {\r\n    dispatch(setSelectedSize(null));\r\n    setActiveSizeId(null);\r\n  };\r\n\r\n  return (\r\n    <ul className={s.Sizes}>\r\n      {\r\n        catalog.sizes?.items?.map(({ id, label, number }) => (\r\n          <li\r\n            key={id}\r\n            onClick={(e) => changeSize(e, id)}\r\n            style={sizeAvailability(id)}\r\n            className={s.sizeItem}\r\n            data_selected={activeSizeId === id ? 'active' : ''}\r\n          >\r\n            {\r\n              (catalog.sizes.isLoading && activeSizeId === id) ? (\r\n                <Spinner margin={0} width={30} />\r\n              ) : (\r\n                <span className={s.sizeText}>{`${number} (${label})`}</span>\r\n              )\r\n            }\r\n          </li>\r\n        ))\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nSizes.protoType = {\r\n  productSize: PropTypes.arrayOf(PropTypes.number),\r\n  removeSearchParam: PropTypes.func,\r\n  addSearchParam: PropTypes.func,\r\n};\r\n\r\nexport default Sizes;","import { useState, useEffect } from 'react';\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ProductDetails.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { addProductBasket } from 'store/basket/basketOperations';\r\nimport Slider from 'components/Slider';\r\nimport Description from 'components/Description';\r\nimport Colors from 'components/Colors';\r\nimport Price from 'components/Price';\r\nimport Name from 'components/Name';\r\nimport Sizes from 'components/Sizes';\r\nimport Button from 'components/Button';\r\n\r\nconst ProductDetails = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { catalog } = useSelector(state => state);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [color, setColor] = useState(null);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n\r\n  // обновляем текущий цвет\r\n  useEffect(() => {\r\n    // если мы пришли из корзины, то устанавливаем нужный цвет\r\n    if (location.state) {\r\n      setColor(location.state.color);\r\n    } else {\r\n      const colorQuery = searchParams.get('color') || '';\r\n\r\n      if (colorQuery) {\r\n        const findColor = product.colors.find(el => el.id === +colorQuery);\r\n\r\n        findColor ? setColor(findColor) : setColor(product.colors[0]);\r\n      } else {\r\n        setColor(product.colors[0]);\r\n      };\r\n    }\r\n  }, [location.state, product, searchParams])\r\n  // обновляем текущую картинку\r\n  useEffect(() => setCurrentImage(color?.images[0]), [color?.images]);\r\n\r\n  const changeColor = (color) => {\r\n    setColor(color);\r\n    setCurrentImage(color.images[0]);\r\n    addSearchParam('color', color.id);\r\n  };\r\n\r\n  const removeSearchParam = (query) => {\r\n    if (searchParams.has(query)) {\r\n      searchParams.delete(query);\r\n      setSearchParams(searchParams);\r\n    };\r\n  };\r\n\r\n  const addSearchParam = (key, value) => {\r\n    const search = {};\r\n\r\n    for (let entry of searchParams.entries()) {\r\n      search[entry[0]] = entry[1];\r\n    };\r\n    setSearchParams({ ...search, [key]: value });\r\n  };\r\n\r\n  const addToBasket = () => {\r\n    const productTotal = {\r\n      id: product.id,\r\n      idBasket: `${product.id}-${color.id}-${catalog.sizes.selecteSize.id}`,\r\n      name: product.name,\r\n      colors: product.colors,\r\n      image: color.images[0],\r\n      basket: {\r\n        description: color.description,\r\n        size: catalog.sizes.selecteSize,\r\n        color: color,\r\n      }\r\n    };\r\n    dispatch(addProductBasket(productTotal));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      {\r\n        color &&\r\n        <Slider\r\n          images={color.images}\r\n          currentImage={currentImage}\r\n          setCurrentImage={setCurrentImage}\r\n          className={s.slider}\r\n        />\r\n      }\r\n\r\n      <div className={s.cardProductContent}>\r\n        {\r\n          color && (\r\n            <div>\r\n              <Name name={`${product.name} ${color.name}`} />\r\n              <Description description={color.description} />\r\n              <Price price={color.price} />\r\n              {\r\n                !location.state ? (\r\n                  <Sizes\r\n                    productSize={color.sizes}\r\n                    removeSearchParam={removeSearchParam}\r\n                    addSearchParam={addSearchParam}\r\n                  />\r\n                ) : (\r\n                  <p>\r\n                    {`${location.state.size.number} (${location.state.size.label})`}\r\n                  </p>\r\n                )\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n        {/* не показываем, если находимся в корзине */}\r\n        {\r\n          !location.state &&\r\n          <Colors\r\n            colors={product.colors}\r\n            changeColor={changeColor}\r\n            currentColor={color?.id}\r\n          />\r\n        }\r\n\r\n        {/* не показываем, если находимся в корзине */}\r\n        {\r\n          !location.state &&\r\n          <div className={s.basketBtn}>\r\n            <Button\r\n              onClick={addToBasket}\r\n              text={\"В корзину\"}\r\n              ariaLabel={\"добавить в корзину\"}\r\n              disabled={(!catalog.sizes.selecteSize || !color) ?? false}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProductDetails.protoType = {\r\n  product: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ProductDetails;","import { useParams, useNavigate } from 'react-router-dom';\r\nimport s from 'views/CardProductView/CardProductView.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCardProduct } from 'store/catalog/catalogOperations';\r\nimport { fetchBasket } from 'store/basket/basketOperations';\r\nimport ProductDetails from 'components/ProductDetails';\r\nimport ErrorMessage from 'components/ErrorMessage';\r\nimport Button from 'components/Button';\r\n\r\nfunction CardProductView() {\r\n  const { productId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { catalog } = useSelector(state => state);\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBasket());\r\n    (async () => {\r\n      const product = await dispatch(fetchCardProduct(productId));\r\n      setProduct(product);\r\n    })();\r\n  }, [productId]);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.buttonBox}>\r\n        <Button\r\n          onClick={() => navigate(-1)}\r\n          text={\"Назад\"}\r\n          ariaLabel={\"Вернуться назад\"}\r\n        />\r\n      </div>\r\n\r\n      <h1>{product?.name}</h1>\r\n      {\r\n        (product && <ProductDetails product={product} />) || (\r\n          <ErrorMessage error={catalog.cardProduct.error} />\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardProductView;"],"names":["Slider","_ref","images","currentImage","setCurrentImage","_jsxs","className","s","children","_jsx","src","noImage","alt","map","image","onClick","protoType","PropTypes","Description","description","Colors","colors","changeColor","currentColor","color","style","id","name","Price","price","concat","Sizes","_catalog$sizes","_catalog$sizes$items","productSize","removeSearchParam","addSearchParam","dispatch","useDispatch","_useSearchParams","useSearchParams","searchParams","_slicedToArray","catalog","useSelector","state","_useState","useState","_useState2","activeSizeId","setActiveSizeId","useEffect","fetchSizes","removeSize","sizeQuery","get","findSize","find","el","addSize","sizeAvailability","forEach","borderColor","backgroundColor","cursor","_objectSpread","chooseSize","setSelectedSize","sizes","items","_ref2","label","number","e","event","currentTarget","data_selected","changeSize","isLoading","Spinner","margin","width","ProductDetails","product","location","useLocation","_useSearchParams2","setSearchParams","setColor","_useState3","_useState4","colorQuery","findColor","key","value","_step","search","_iterator","_createForOfIteratorHelper","entries","n","done","entry","err","f","_defineProperty","Name","size","query","has","delete","Button","productTotal","idBasket","selecteSize","basket","addProductBasket","text","ariaLabel","disabled","productId","useParams","navigate","useNavigate","setProduct","fetchBasket","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetchCardProduct","sent","stop","_Fragment","ErrorMessage","error","cardProduct"],"sourceRoot":""}